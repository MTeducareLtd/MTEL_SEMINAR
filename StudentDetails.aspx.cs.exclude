using Microsoft.VisualBasic;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Diagnostics;
using ShoppingCart.BL;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.IO;
using System.Net.Mail;
using System.Net;
using System.Net.Mime;

public partial class StudentDetails : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        try
        {
            if (!IsPostBack)
            {

                FillConfigInfo();
                FillDDL_Standard();
                FillDDL_Product();
                BindRulesAndRegulations();
            }
        }
        catch (Exception ex)
        {
            Show_Error_Success_Box("E", ex.ToString());
            return;
        }
    }
    #region Events

    protected void ddlProductName_SelectedIndexChanged(object sender, EventArgs e)
    {
        BindOptionalSubject(ddlProductName.SelectedValue, lblCenterCode.Text);
    }

    protected void BtnSave_Click(object sender, EventArgs e)
    {
        Clear_Error_Success_Box();
        if (txtMobileNo.Text == "")
        {
            Show_Error_Success_Box("E", "Enter Mobile Number");
            txtMobileNo.Focus();
            return;
        }
        if (txtMobileNo.Text.Length < 10)
        {
            Show_Error_Success_Box("E", "Mobile Number length must be between 10 to 12 characters");
            txtMobileNo.Focus();
            return;
        }
        if (ddlTitle_Add.SelectedValue == "Select")
        {
            Show_Error_Success_Box("E", "Select Student Initial");
            ddlTitle_Add.Focus();
            return;
        }
        if (txtFirstName.Text == "")
        {
            Show_Error_Success_Box("E", "Enter First Name");
            txtFirstName.Focus();
            return;
        }
        if (txtEmailId.Text == "")
        {
            Show_Error_Success_Box("E", "Enter Email Id");
            txtEmailId.Focus();
            return;
        }
        if (txtParentMobileNo.Text != "")
        {
            if (txtParentMobileNo.Text.Length < 10)
            {
                Show_Error_Success_Box("E", "Parent Mobile Number length must be between 10 to 12 characters");
                txtParentMobileNo.Focus();
                return;
            }
        }
        if (txtInstitute.Text == "")
        {
            Show_Error_Success_Box("E", "Enter Institution Name");
            txtInstitute.Focus();
            return;            
        }

        if (ddlStandard.SelectedValue == "Select")
        {
            Show_Error_Success_Box("E", "Select Current Standard");
            ddlStandard.Focus();
            return;
        }
        if (ddlProductName.SelectedValue == "Select")
        {
            Show_Error_Success_Box("E", "Select Product");
            ddlProductName.Focus();
            return;
        }
        string ResultId = "0";
        //string Titile = ddlTitle_Add.SelectedValue;
        //string Standard = ddlStandard.SelectedValue;
        //ResultId = ProductController.InsertAddOpportunity("", "", "", ddlTitle_Add.SelectedValue, txtFirstName.Text.Trim(), txtMiddleName.Text.Trim(), txtLastName.Text.Trim(), 0, 0, 0, 0, "", txtMobileNo.Text, txtParentMobileNo.Text, "", txtEmailId.Text.Trim(), "", "", "", "", "", "", "", "", "", "", "", "", ddlStandard.SelectedValue, ddlStandard.SelectedItem.ToString(), "", "", "", "", "", "", "", lblAcdYear.Text, lblAcadYear_Result.Text, "", "", "", "", "", "", "", ddlProductName.SelectedValue, "", System.DateTime.Now.ToString(), System.DateTime.Now.ToString(), "", "", 0, 0, "", lblDivisionCode.Text, lblCenterCode.Text, "", "", "", "", "", "", "", "", lblDivisionCode.Text, lblCenterCode.Text, "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 0, "", 0, "", "", 0, 0, "", "", "", "", "", "", "", "", "", "", "", "", "", "", "");
        try
        {
            object obj = null;
            CheckBox Chk = default(CheckBox);
            Label lblSelectmaterialcode = default(Label);
            List<string> list = new List<string>();
            List<string> List1 = new List<string>();
            string Sgrcode = "";
            CheckBox cb = default(CheckBox);

            foreach (DataListItem li in dlselective.Items)
            {
                obj = li.FindControl("lblmaterialcodeadd");
                if (obj != null)
                {
                    lblSelectmaterialcode = (Label)obj;
                }

                cb = (CheckBox)li.FindControl("ckhselect1");
                if (cb != null)
                {
                    Chk = (CheckBox)cb;
                }

                if (Chk.Checked == true)
                {
                    list.Add(lblSelectmaterialcode.Text);
                    Sgrcode = string.Join(",", list.ToArray());
                }
            }

            ResultId = ProductController.InsertAddOpportunityTabStagging("", ddlTitle_Add.SelectedItem.ToString(), txtFirstName.Text.Trim(), txtMiddleName.Text.Trim(), txtLastName.Text.Trim(), txtMobileNo.Text, txtParentMobileNo.Text, txtEmailId.Text.Trim(), ddlStandard.SelectedValue, ddlStandard.SelectedItem.ToString(), lblAcadYear_Result.Text, lblAcadYear_Result.Text, lblDivisionCode.Text, lblCenterCode.Text, ddlProductName.SelectedItem.ToString(), ddlProductName.SelectedValue, txtInstitute.Text.Trim(), lblUserId.Text, Sgrcode);
            if (ResultId == "-1")
            {
                Show_Error_Success_Box("E", "Record Not Saved...! ");
            }
            else
            {
                string count = "";
                int resultid = 0;
                 DataSet DSChk = ProductController.Check_MesageTemplate("012", lblDivisionCode.Text,1);
                 if (DSChk != null)
                 {
                     count = DSChk.Tables[0].Rows[0]["count1"].ToString();
                     if (count == "0")
                     {
                         //Disable
                     }
                     else
                     {
                         string Template = DSChk.Tables[0].Rows[0]["Message_Template"].ToString();
                         string Message_cd = DSChk.Tables[0].Rows[0]["Message_Code"].ToString();
                         string MsgMode = DSChk.Tables[0].Rows[0]["Send_Type"].ToString();

                         string NewTemplate = Template.Replace("%2526", "%26"); 


                         if (MsgMode == "Auto")
                         {
                             resultid = ProductController.Insert_SMSLog(lblCenterCode.Text, Message_cd, txtMobileNo.Text, NewTemplate, "0", "Auto", "Transactional");
                         }
                         else if (MsgMode == "Manual")
                         {
                             resultid = ProductController.Insert_SMSLog(lblCenterCode.Text, Message_cd, txtMobileNo.Text, NewTemplate, "0", lblUserId.Text, "Transactional");
                         }
                     }
                 }
                 //Email Sending
                 string userid = "", Password = "", Host = "", SSL = "", MailType = "";
                 int Port = 0;
                 DataSet dsEmailInfo = ProductController.GetMailDetails_ByCenter(lblCenterCode.Text,"Transactional",2);
                 if (dsEmailInfo.Tables[0].Rows.Count > 0)
                 {
                     userid = Convert.ToString(dsEmailInfo.Tables[0].Rows[0]["UserId"]);
                     Password = Convert.ToString(dsEmailInfo.Tables[0].Rows[0]["Password"]);
                     Host = Convert.ToString(dsEmailInfo.Tables[0].Rows[0]["Host"]);
                     Port = Convert.ToInt32(Convert.ToString(dsEmailInfo.Tables[0].Rows[0]["Port"]));
                     SSL = Convert.ToString(dsEmailInfo.Tables[0].Rows[0]["EnableSSl"]);
                     MailType = Convert.ToString(dsEmailInfo.Tables[0].Rows[0]["MailType"]);

                    
                     //////
                     MailMessage Msg = new MailMessage();
                     try
                     {
                         Msg = new MailMessage(userid, txtEmailId.Text.Trim());
                     }
                     catch (Exception ex)
                     {
                     }


                     string CurTimeFrame = null, Result="";
                     CurTimeFrame = System.DateTime.Now.ToString("ddMMyyyyhhmmss");

                     // Subject of e-mail
                     Msg.Subject = "Thank You For Enquiry...!";

                     StreamReader reader = new StreamReader(Server.MapPath("~/SendEmail.htm"));
                     string readFile = reader.ReadToEnd();
                     string myString = "",streamCode=ddlProductName.SelectedValue;
                     myString = readFile;
                     //Find Brochure Path
                     DataSet dsBrochurePath = ProductController.GetBrochurePathDetail_ByStream(lblDivisionCode.Text, streamCode, 1);
                     if (dsBrochurePath.Tables[0].Rows.Count > 0)
                     {
                         Result = Convert.ToString(dsBrochurePath.Tables[0].Rows[0]["BrochureImagePath"]);
                         
                         Attachment data = new Attachment(Server.MapPath(Result),MediaTypeNames.Application.Octet);

                         Msg.Attachments.Add(data);
                     }
                     else
                     {
                         Attachment data = new Attachment(
                         Server.MapPath("~/Images/BrochureTest/All.jpg"),
                         MediaTypeNames.Application.Octet);
                         
                         Msg.Attachments.Add(data);
                     }
                     //myString = myString.Replace("$$Result$$", Result);
                     string Att_Name = "";
                    // Msg.Body = myString.ToString();
                     Msg.Body = "Dear Parents, <br/><br/> Thank you for visiting our centre. Kindly find attachment of our Prospectus for your reference. <br/><br/> Warm Regards <br/><br/> MT Educare Ltd. <br/><br/>This is an automated system generated Mail. Please do not reply.<br>";

                     

                     Msg.IsBodyHtml = true;

                     bool value = System.Convert.ToBoolean(SSL);
                     SmtpClient smtp = new SmtpClient();
                     smtp.Host = Host;
                     smtp.EnableSsl = value;
                     NetworkCredential NetworkCred = new NetworkCredential(userid, Password);
                     smtp.UseDefaultCredentials = true;
                     smtp.Credentials = NetworkCred;
                     smtp.Port = Port;

                     //int resultid1 = 0;
                     try
                     {
                         //smtp.Timeout = 20000;
                         smtp.Send(Msg);

                         resultid = ProductController.Insert_Mailog(txtEmailId.Text.Trim(), Msg.Subject.ToString().Trim(), Msg.Body.ToString().Trim(), 1, Att_Name, "1", lblUserId.Text, 1, "General Email", MailType);
                         count = count + 1;
                     }
                     catch (Exception ex)
                     {
                         resultid = ProductController.Insert_Mailog(txtEmailId.Text.Trim(), Msg.Subject.ToString().Trim(), Msg.Body.ToString().Trim(), 1, Att_Name, "2", lblUserId.Text, 1, "General Email", MailType);
                     }

                 }

                txtMobileNo.Text = "";
                Clear_AddPanel();
                divSaveMessage.Visible = true;
                divAddStudDetail.Visible = false;

                if ((Request.QueryString["UserId"] != null) && (Request.QueryString["DivName"] != null) && (Request.QueryString["DivCode"] != null) && (Request.QueryString["AcYear"] != null) && (Request.QueryString["AcYearCode"] != null) && (Request.QueryString["Center"] != null) && (Request.QueryString["CenterCode"] != null))
                {
                    Response.Redirect("ThanksMessage.aspx?UserId=" + Request.QueryString["UserId"] + "&DivName=" + Request.QueryString["DivName"] + "&DivCode=" + Request.QueryString["DivCode"] + "&AcYear=" + Request.QueryString["AcYear"] + "&AcYearCode=" + Request.QueryString["AcYearCode"] + "&Center=" + Request.QueryString["Center"] + "&CenterCode=" + Request.QueryString["CenterCode"] + "&Message=Enquiry");
                }
                else
                {
                    Response.Redirect("ThanksMessage.aspx?Message=Enquiry");
                }
            }
        }
        catch (Exception ex)
        {
            Show_Error_Success_Box("E", ex.ToString());
            return;
        }


    }
    protected void BtnClose_Click(object sender, EventArgs e)
    {
        if ((Request.QueryString["UserId"] != null) && (Request.QueryString["DivName"] != null) && (Request.QueryString["DivCode"] != null) && (Request.QueryString["AcYear"] != null) && (Request.QueryString["AcYearCode"] != null) && (Request.QueryString["Center"] != null) && (Request.QueryString["CenterCode"] != null))
        {
            Response.Redirect("Default.aspx?UserId=" + Request.QueryString["UserId"] + "&DivName=" + Request.QueryString["DivName"] + "&DivCode=" + Request.QueryString["DivCode"] + "&AcYear=" + Request.QueryString["AcYear"] + "&AcYearCode=" + Request.QueryString["AcYearCode"] + "&Center=" + Request.QueryString["Center"] + "&CenterCode=" + Request.QueryString["CenterCode"] + "");
        }
        else
        {
            Response.Redirect("Default.aspx");
        }
        
    }

    protected void btnOk_Click(object sender, EventArgs e)
    {
        if ((Request.QueryString["UserId"] != null) && (Request.QueryString["DivName"] != null) && (Request.QueryString["DivCode"] != null) && (Request.QueryString["AcYear"] != null) && (Request.QueryString["AcYearCode"] != null) && (Request.QueryString["Center"] != null) && (Request.QueryString["CenterCode"] != null))
        {
            Response.Redirect("Default.aspx?UserId=" + Request.QueryString["UserId"] + "&DivName=" + Request.QueryString["DivName"] + "&DivCode=" + Request.QueryString["DivCode"] + "&AcYear=" + Request.QueryString["AcYear"] + "&AcYearCode=" + Request.QueryString["AcYearCode"] + "&Center=" + Request.QueryString["Center"] + "&CenterCode=" + Request.QueryString["CenterCode"] + "");
        }
        else
        {
            Response.Redirect("Default.aspx");
        }
    }
    

    protected void lnkSearchInfo_Click(object sender, EventArgs e)
    {
        try
        {
            
            Clear_Error_Success_Box();
            Clear_AddPanel();
            if (txtMobileNo.Text.Trim() == "")
            {
                Show_Error_Success_Box("E", "Enter Mobile No");
                txtMobileNo.Focus();
                return;
            }
            try
            {
                long i = Convert.ToInt64(txtMobileNo.Text);
            }
            catch
            {
                Show_Error_Success_Box("E", "Please Enter Only Numbers");
                txtMobileNo.Focus();
                return;
            }
            if ((txtMobileNo.Text.Length < 10))
            {
                Show_Error_Success_Box("E", "Mobile length must be between 10 to 12 characters");
                txtMobileNo.Focus();
                return;
            }

            DataSet ds = ProductController.Get_OpportunityByMobileNo(txtMobileNo.Text, lblDivisionCode.Text, lblCenterCode.Text, lblAcdYear.Text, "1");
             if (ds.Tables[0].Rows.Count > 0)
             {
                 txtMobileNo.Text = ds.Tables[0].Rows[0]["Handphone1"].ToString();
                 try
                 {
                     ddlTitle_Add.SelectedValue = ds.Tables[0].Rows[0]["Con_Title"].ToString();
                 }
                 catch
                 {
                 }
                 txtFirstName.Text = ds.Tables[0].Rows[0]["Con_FirstName"].ToString();
                 txtMiddleName.Text = ds.Tables[0].Rows[0]["Con_midname"].ToString();
                 txtLastName.Text = ds.Tables[0].Rows[0]["Con_lastname"].ToString();
                 txtEmailId.Text = ds.Tables[0].Rows[0]["Emailid"].ToString();
                 txtParentMobileNo.Text = ds.Tables[0].Rows[0]["Handphone2"].ToString();
                 txtInstitute.Text = ds.Tables[0].Rows[0]["Institution_Description"].ToString();
                 //ddlStandard.SelectedValue = ds.Tables[0].Rows[0]["Current_Standard_Id"].ToString();
                 //ddlProductName.SelectedValue = ds.Tables[0].Rows[0]["Oppor_Product_Id"].ToString();
             }

        }
        catch (Exception ex)
        {
            Show_Error_Success_Box("E", ex.ToString());
            return;
        }

    }


    protected void chkCheck_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (chkCheck.Checked == true)
            {
                divAdddNewStud.Visible = false;
                divApplyTermsCond.Visible = true;
                
            }
            else
            {
                BtnSave.Visible = false;
            }
        }
        catch (Exception ex)
        {
            Msg_Error.Visible = true;
            Msg_Success.Visible = false;
            lblerror.Text = ex.ToString();
            UpdatePanelMsgBox.Update();
            return;
        }
    }

    protected void btnApplyTermsCond_Click(object sender, EventArgs e)
    {
        try
        {
            divAdddNewStud.Visible = true;
            divApplyTermsCond.Visible = false;
            BtnSave.Visible = true;
        }
        catch (Exception ex)
        {
            Msg_Error.Visible = true;
            Msg_Success.Visible = false;
            lblerror.Text = ex.ToString();
            UpdatePanelMsgBox.Update();
            return;
        }
    }

    #endregion
    #region Methods

    /// <summary>
    /// Clear Error Success Box
    /// </summary>
    private void Clear_Error_Success_Box()
    {
        Msg_Error.Visible = false;
        Msg_Success.Visible = false;
        lblSuccess.Text = "";
        lblerror.Text = "";
        UpdatePanelMsgBox.Update();
    }

    /// <summary>
    /// Show Error or success box on top base on boxtype and Error code
    /// </summary>
    /// <param name="BoxType">BoxType</param>
    /// <param name="Error_Code">Error_Code</param>
    private void Show_Error_Success_Box(string BoxType, string Error_Code)
    {
        if (BoxType == "E")
        {
            Msg_Error.Visible = true;
            Msg_Success.Visible = false;
            lblerror.Text = ProductController.Raise_Error(Error_Code);
            UpdatePanelMsgBox.Update();
        }
        else
        {
            Msg_Success.Visible = true;
            Msg_Error.Visible = false;
            lblSuccess.Text = ProductController.Raise_Error(Error_Code);
            UpdatePanelMsgBox.Update();
        }
    }

    /// <summary>
    /// Fill drop down list and assign value and Text
    /// </summary>
    /// <param name="ddl"></param>
    /// <param name="ds"></param>
    /// <param name="txtField"></param>
    /// <param name="valField"></param>
    private void BindDDL(DropDownList ddl, DataSet ds, string txtField, string valField)
    {
        ddl.DataSource = ds;
        ddl.DataTextField = txtField;
        ddl.DataValueField = valField;
        ddl.DataBind();
    }


    private void Clear_AddPanel()
    {
        ddlTitle_Add.SelectedIndex = 0;
        txtFirstName.Text = "";
        txtMiddleName.Text = "";
        txtLastName.Text = "";
        txtEmailId.Text = "";
        txtParentMobileNo.Text = "";
        txtInstitute.Text = "";
        ddlStandard.SelectedIndex = 0;
        ddlProductName.SelectedIndex = 0;
        dlselective.DataSource = null;
        dlselective.DataBind();
    }


    private void BindOptionalSubject(string StreamName, string Center)
    {
        DataSet ds = ProductController.GetSubjectsbyStreamCode(5, StreamName, Center);
        if (ds.Tables[0] != null)
        {
            dlselective.DataSource = ds;
            dlselective.DataBind();
        }

    }


    private void BindRulesAndRegulations()
    {
        DataSet ds = ProductController.GetRulesAndRegulations(1, "Enquiry");
        if (ds.Tables[0] != null)
        {
            dlRuleAndRegulations.DataSource = ds;
            dlRuleAndRegulations.DataBind();
        }

    }

    /// <summary>
    /// Fill Config Infot 
    /// </summary>
    private void FillConfigInfo()
    {

        try
        {

            if ((Request.QueryString["UserId"] != null) && (Request.QueryString["DivName"] != null) && (Request.QueryString["DivCode"] != null) && (Request.QueryString["AcYear"] != null) && (Request.QueryString["AcYearCode"] != null) && (Request.QueryString["Center"] != null) && (Request.QueryString["CenterCode"] != null))
            {
                lblUserId.Text = Request.QueryString["UserId"];
                lblDivision_Result.Text = Request.QueryString["DivName"];
                lblDivisionCode.Text = Request.QueryString["DivCode"];
                lblAcadYear_Result.Text = Request.QueryString["AcYear"];
                lblAcdYear.Text = Request.QueryString["AcYearCode"];
                lblCenter_Result.Text = Request.QueryString["Center"];
                lblCenterCode.Text = Request.QueryString["CenterCode"];                
            }
            else
            {
                Response.Redirect("Configuration.aspx");
            }

            //string Div_Code = null;
            //Div_Code = lblDivisionCode.Text;

            //DataSet dsAllStandard = ProductController.GetAllActive_AllStandard(Div_Code);
            //BindDDL(ddlStandard, dsAllStandard, "Standard_Name", "Standard_Code");
            //ddlStandard.Items.Insert(0, "Select");
            //ddlStandard.SelectedIndex = 0;
        }
        catch (Exception ex)
        {
            Msg_Error.Visible = true;
            Msg_Success.Visible = false;
            lblerror.Text = ex.ToString();
            UpdatePanelMsgBox.Update();
            return;
        }

    }

    /// <summary>
    /// Fill Course dropdownlist 
    /// </summary>
    private void FillDDL_Standard()
    {

        try
        {

            string Institute_Type_Id = null;
            Institute_Type_Id = "01";

            DataSet dsAllStandard = ProductController.GetallCurrentStudyingin(Institute_Type_Id);
            BindDDL(ddlStandard, dsAllStandard, "description", "id");
            ddlStandard.Items.Insert(0, "Select");
            ddlStandard.SelectedIndex = 0;


            //string Div_Code = null;
            //Div_Code = lblDivisionCode.Text;

            //DataSet dsAllStandard = ProductController.GetAllActive_AllStandard(Div_Code);
            //BindDDL(ddlStandard, dsAllStandard, "Standard_Name", "Standard_Code");
            //ddlStandard.Items.Insert(0, "Select");
            //ddlStandard.SelectedIndex = 0;
        }
        catch (Exception ex)
        {
            Msg_Error.Visible = true;
            Msg_Success.Visible = false;
            lblerror.Text = ex.ToString();
            UpdatePanelMsgBox.Update();
            return;
        }

    }

    private void FillDDL_Product()
    {
        try
        {
            ddlProductName.Items.Clear();


            DataSet dsProduct = ProductController.GetStreamby_Center_AcademicYear(lblCenterCode.Text, lblAcadYear_Result.Text);
            BindDDL(ddlProductName, dsProduct, "Stream_SDesc", "Stream_Code");
            ddlProductName.Items.Insert(0, "Select");
            ddlProductName.SelectedIndex = 0;

            //string Div_Code = null;
            //Div_Code = lblDivisionCode.Text;

            //string YearName = null;
            //YearName = lblAcdYear.Text;

            //string CourseCode = null;
            //CourseCode = ddlStandard.SelectedValue;

            //DataSet dsLMS = ProductController.Get_LMSProduct_ByDivision_Year_Course(Div_Code, YearName, CourseCode);
            //BindDDL(ddlProductName, dsLMS, "ProductName", "ProductCode");
            //ddlProductName.Items.Insert(0, "Select");
            //ddlProductName.SelectedIndex = 0;
        }
        catch (Exception ex)
        {
            Msg_Error.Visible = true;
            Msg_Success.Visible = false;
            lblerror.Text = ex.ToString();
            UpdatePanelMsgBox.Update();
            return;
        }
    }


    


    #endregion

    
}